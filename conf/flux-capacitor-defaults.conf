## NOTE: flux-capacitor configuration files are sourced into a bash shell (executed).

## NOTE: To complement the default configuration with a file containing only
## a few custom overrides, create an override file whose content begins with:
##
## . ${FLUXCAP_HOME}/conf/flux-capacitor-defaults.conf
##
## and then sets some of the variables found below to custom values.
##
## Pass the location of the override file as the configFile argument to
## flux-capacitor scripts.


# The S3 location at which flux-capacitor resources will be made available.
# This will be done by the upload-flux-capacitor-resources script.
FLUXCAP_S3_URL="s3://flux-capacitor/resources"

# AWS CLI profile for commands run locally
AWS_PROFILE="default"


#####################################
#####    BEGIN DATA OPTIONS     #####
#####################################

# The Hadoop-style URL to the distributed filesystem containing the stream archives.
# Note that to use S3 directly, the URI scheme is 's3n' (not 's3'), and credentials
# must be included (EC2 Instance Roles are not supported). To avoid this, you
# could use EMRFS (http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/emr-fs.html)
# or script the credentials into the Hadoop config used by Drill.
STREAM_ARCHIVES_DFS_URL="s3n://accessKeyId:secretKeyId@flux-capacitor-stream-archives"

# Path within the above DFS to the location of stream archives. Children of this
# path will be considered as SQL "tables", beneath which any further structure
# will be considered as "table partitions".
STREAM_ARCHIVES_PATH="/stream-archives"

# The directory name below ${STREAM_ARCHIVES_PATH} containing the archives of
# the stream; also used as the table name for accessing the same with Hive SQL.
STREAM_ARCHIVE_NAME="event_archive"

# The name of the Kinesis stream.
STREAM_NAME="event"

# The table name for accessing the live Kinesis stream with SQL.
STREAM_HIVE_TABLE_NAME="event_stream"

#####################################
#####    END DATA OPTIONS     #####
#####################################


#####################################
##### BEGIN EMR CLUSTER OPTIONS #####
#####################################
EMR_CLUSTER_NAME="flux-capacitor"

# The roles configured below must already exist.
# To create the default Service Role "EMR_DefaultRole" and the default EC2
# instance role "EMR_EC2_DefaultRole", use the command:
#     aws emr create-default-roles
EMR_SERVICE_ROLE="EMR_DefaultRole"
EMR_EC2_ROLE="EMR_EC2_DefaultRole"

EMR_AMI_VERSION="3.7.0"
EMR_INSTANCE_GROUP_MASTER="InstanceGroupType=MASTER,InstanceCount=1,InstanceType=m3.xlarge"
EMR_INSTANCE_GROUP_CORE="InstanceGroupType=CORE,InstanceCount=1,InstanceType=m3.xlarge"
EMR_INSTANCE_GROUP_TASK="InstanceGroupType=TASK,InstanceCount=1,InstanceType=m3.xlarge"
EMR_INSTANCE_GROUPS="${EMR_INSTANCE_GROUP_MASTER} ${EMR_INSTANCE_GROUP_CORE} ${EMR_INSTANCE_GROUP_TASK}"

# Additional options to 'aws emr create-cluster'
# Refer to http://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html
# This value will not be quoted when expanded, so the aws command will recognize
# multiple parameters.
EMR_EXTRA_CLUSTER_OPTIONS=

# Additional EC2 attributes to include in 'aws emr create-cluster --ec2-attributes'
# Refer to http://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html
# This will be expanded into a quoted string with no further quotation of this
# value specifically.
EMR_EXTRA_EC2_ATTRIBUTES=

EMR_APPLICATIONS="Name=HIVE"

#####################################
#####  END EMR CLUSTER OPTIONS  #####
#####################################
