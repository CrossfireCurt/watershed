import com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer

plugins {
    id "java"
    id "groovy"
    id "com.github.johnrengelman.shadow" version "1.2.2"
    id "idea"
    id "eclipse"
    id "maven"
    id 'application'
}

project.ext {
    drillVersion = "1.1.0"
    dropwizardVersion = '0.8.3'
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.6"
}

mainClassName = "com.commercehub.watershed.pump.application.PumpApplication"

group "com.commercehub"
version = "0.1.0"

// Target Java7 because that's what Apache Drill and AWS EMR support
sourceCompatibility = "1.7"
targetCompatibility = "1.7"


repositories {
    jcenter()
}

dependencies {
    compile('com.amazonaws:amazon-kinesis-producer:0.10.2') {
        exclude module: "slf4j-simple"
    }

    compile(
            "org.slf4j:slf4j-api:1.7.6",
            'com.amazonaws:aws-java-sdk-kinesis:1.10.34',
            "com.github.davidmoten:rxjava-jdbc:0.6.2",
            "io.reactivex:rxjava:1.0.14",
            "io.reactivex:rxjava-guava:1.0.2",
            "com.fasterxml.jackson.core:jackson-databind:2.3.2",
            "com.google.inject:guice:4.0",
            'com.google.inject.extensions:guice-assistedinject:4.0',
            "com.hubspot.dropwizard:dropwizard-guice:0.8.3.0",
            "io.dropwizard:dropwizard-core:${dropwizardVersion}"
    )

    runtime(
            "ch.qos.logback:logback-classic:1.1.2",
    )

    testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
        exclude module: "groovy-all"
    }
    testCompile(
            "org.codehaus.groovy:groovy-all:2.4.4:indy",
            "org.skyscreamer:jsonassert:1.2.3",
            "io.dropwizard:dropwizard-testing:0.8.3",
            "org.ow2.asm:asm-all:5.0.3"
    )

    //An error with bundled asm package in cglib - exclude it.
    testCompile('cglib:cglib:3.1'){
        exclude module: 'asm'
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}

jar.dependsOn "watershed-pump-support:assemble"
assemble.dependsOn "shadowJar" // Include shadowed jar as part of standard project outputs
shadowJar {
    mergeServiceFiles()
    destinationDir new File("${rootDir}/build/libs")
    archiveName "${project.name}-${project.version}.shadow.jar"

    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    transform(IncludeResourceTransformer) {
        file = project("watershed-pump-support").getTasksByName("shadowJar", false).first().outputs.files.getSingleFile()
        resource = "watershed-pump-support.shadow.jar"
    }
}

jar {
    manifest {
        attributes "Main-Class": mainClassName
        attributes "Built-By": System.getProperty("user.name")
        attributes "Build-Jdk": System.getProperty("java.version")
    }
}
